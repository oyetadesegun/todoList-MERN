swagger: "2.0"
info:
  title: Todo List
  description: This API provides endpoints to manage a Todo List application. Users can create, retrieve, update, and delete tasks in their Todo List.
  version: 1.0.0
  contact:
    email: johnwellacademy@gmail.com
  license:
    name: The Todo App
    url: "https://todo-list-mern-seven.vercel.app"
  servers:
    -url: "https://todolist-1yar.onrender.com/"
    description: Here is the link to the backend
schemes: [http, https]
paths:
# Returns all Todos
  /get:
    get:
      summary: Returns all existing Task
      description: It shows all task you have created in the past
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                task:
                  type: string
                done:
                  type: boolean
        400:
          description: User Error
        500:
          description: Internal Server Error

#To Add to Todo
  /add:
    post:
      summary: Add a new task to the Todo List
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: task
          schema:
            type: object
            properties:
                task:
                  type: string
      responses:
        '200':
          description: Task added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task added successfully

# To Update a Task
  /update/{id}:
    put:
      summary: To toggle a task done between true and false
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id  # Should match the parameter name in the path
          schema:
            type: string
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task updated successfully
#To delete a task
  /delete/{id}:
    delete:
      summary: To delete a task
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id  # Should match the parameter name in the path
          schema:
            type: string
      responses:
        '200':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task deleted successfully